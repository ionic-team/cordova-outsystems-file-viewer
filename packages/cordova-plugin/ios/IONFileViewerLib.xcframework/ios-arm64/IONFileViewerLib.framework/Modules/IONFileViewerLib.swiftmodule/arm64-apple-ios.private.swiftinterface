// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name IONFileViewerLib
import AVKit
import Foundation
import QuickLook
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class IONFLVWManager {
  public init(viewController: UIKit.UIViewController, fileManager: Foundation.FileManager = .default)
  @objc deinit
}
extension IONFileViewerLib.IONFLVWManager : IONFileViewerLib.IONFLVWOpenDocumentManager {
  public func openDocumentFromLocalPath(filePath: Swift.String, completion: @escaping (() -> Swift.Void)) throws
  public func openDocumentFromResources(assetPath: Swift.String, completion: @escaping (() -> Swift.Void)) throws
  public func openDocumentFromUrl(url: Swift.String, completion: @escaping ((IONFileViewerLib.IONFLVWError?) -> Swift.Void)) throws
}
extension IONFileViewerLib.IONFLVWManager : IONFileViewerLib.IONFLVWPreviewMediaManager {
  public func previewMediaContentFromLocalPath(filePath: Swift.String) throws
  public func previewMediaContentFromResources(assetPath: Swift.String) throws
  public func previewMediaContentFromUrl(url: Swift.String) throws
}
public enum IONFLVWError : Foundation.LocalizedError, Swift.Equatable {
  case fileDoesNotExist(atPath: Swift.String)
  case emptyFilePath
  case couldNotOpenDocument
  case invalidURL(forUrl: Swift.String)
  case invalidEmptyURL
  case downloadFailed
  case missingFileExtension
  public var errorDescription: Swift.String? {
    get
  }
  public static func == (a: IONFileViewerLib.IONFLVWError, b: IONFileViewerLib.IONFLVWError) -> Swift.Bool
}
public protocol IONFLVWOpenDocumentManager {
  func openDocumentFromLocalPath(filePath: Swift.String, completion: @escaping (() -> Swift.Void)) throws
  func openDocumentFromResources(assetPath: Swift.String, completion: @escaping (() -> Swift.Void)) throws
  func openDocumentFromUrl(url: Swift.String, completion: @escaping ((IONFileViewerLib.IONFLVWError?) -> Swift.Void)) throws
}
public protocol IONFLVWPreviewMediaManager {
  func previewMediaContentFromLocalPath(filePath: Swift.String) throws
  func previewMediaContentFromResources(assetPath: Swift.String) throws
  func previewMediaContentFromUrl(url: Swift.String) throws
}
